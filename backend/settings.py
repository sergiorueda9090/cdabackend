"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['*']

EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')  # según tu región
EMAIL_PORT = config('EMAIL_PORT') 
EMAIL_USE_SSL = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'channels',
    'drf_yasg',
    'storages',
    'users',
    'clientes',
    'tramites',
    'whatsapp',
    'generadortoken',
    'cotizador',
    'etiquetas',
    'cuentasbancarias',
    'registroTarjetas',
    'recepcionPago',
    'devolucion',
    'devoluciones',
    'ajustesaldos',
    'gastos',
    'gastosgenerales',
    'utilidadocacional',
    'fichacliente',
    'archivocotizacionesantiguas',
    'historialtramitesemitidos',
    'proveedores',
    'fichaproveedor',
    'rolespermisos',
    'balancegeneral',
    'utilidad',
    'cargosnoregistrados',
    'tarjetastrasladofondo'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'
ASGI_APPLICATION = 'backend.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=12),  # Duración del token de acceso
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),   # Duración del token de refresco
    'ROTATE_REFRESH_TOKENS': False,               # Evita rotar el token de refresco en cada uso
    'BLACKLIST_AFTER_ROTATION': True,             # Bloquea los tokens rotados si habilitas ROTATE_REFRESH_TOKENS
    'ALGORITHM': 'HS256',                         # Algoritmo de cifrado
    'SIGNING_KEY': SECRET_KEY,                    # Clave de firma
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'AUTH_HEADER_TYPES': ('Bearer',),             # Tipo de cabecera usada
    'USER_ID_FIELD': 'id',                        # Campo usado para identificar usuarios
    'USER_ID_CLAIM': 'user_id',                   # Reclamo en el payload del token
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
}


AWS_ACCESS_KEY_ID       = config('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY   = config('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME      = config('AWS_S3_REGION_NAME')  # o la región donde creaste el bucket
AWS_QUERYSTRING_AUTH    = False  # no genera tokens firmados en las URLs

# Dominio del bucket (público)
AWS_S3_CUSTOM_DOMAIN = f"{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com"

# Este es el almacenamiento por defecto para archivos e imágenes
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# Opcional: si quieres definir carpetas base dentro del bucket
MEDIA_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE'    : 'django.db.backends.mysql',
        'NAME'      : config('DATABASE_NAME'),
        'USER'      : config('DATABASE_USER'),
        'PASSWORD'  : config('DATABASE_PASSWORD'),
        'HOST'      : config('DATABASE_HOST', default='localhost'),  # Opcional
        'PORT'      : config('DATABASE_PORT', default='3306'),       # Opcional
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Bogota'  # Configura la zona horaria de Colombia

USE_TZ = False # Asegura que Django use soporte para zonas horarias

USE_I18N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_URL = '/media/'  # Prefijo de URL para los archivos
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Ruta absoluta donde se guardarán los archivos

#USERS
AUTH_USER_MODEL = 'users.User'

CORS_ORIGIN_ALLOW_ALL = True
CARS_ALLOW_CREDENTIALS = True